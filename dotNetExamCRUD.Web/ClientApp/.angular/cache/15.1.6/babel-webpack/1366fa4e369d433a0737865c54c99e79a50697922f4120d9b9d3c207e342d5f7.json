{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContactService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.contactUrl = environment.baseUrl;\n  }\n  addContact(contact) {\n    return this.httpClient.post(`${this.contactUrl}/`, {\n      ...contact\n    });\n  }\n  updateContact(contact) {\n    return this.httpClient.put(`${this.contactUrl}/`, {\n      ...contact\n    });\n  }\n  deleteContact(id) {\n    return this.httpClient.delete(`${this.contactUrl}/`, {\n      body: {\n        id\n      }\n    });\n  }\n  searchContact(pageIndex, filter) {\n    return this.httpClient.get(`${this.contactUrl}/search?pageIndex=${pageIndex}&filter.lastName=${filter.lastName}\n    &filter.firstName=${filter.firstName}&filter.companyName=${filter.companyName}&filter.email=${filter.email}&filter.contactNumber=${filter.contactNumber}`);\n  }\n}\nContactService.ɵfac = function ContactService_Factory(t) {\n  return new (t || ContactService)(i0.ɵɵinject(i1.HttpClient));\n};\nContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContactService,\n  factory: ContactService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAO1D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IADtB,eAAU,GAAUH,WAAW,CAACI,OAAO;EACD;EAEvCC,UAAU,CAACC,OAAe;IAC/B,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAwB,GAAG,IAAI,CAACC,UAAU,GAAG,EAAC;MAAC,GAAGF;IAAO,CAAC,CAAC;EACxF;EAEOG,aAAa,CAACH,OAAe;IAClC,OAAO,IAAI,CAACH,UAAU,CAACO,GAAG,CAAyB,GAAG,IAAI,CAACF,UAAU,GAAG,EAAC;MAAC,GAAGF;IAAO,CAAC,CAAC;EACxF;EAEOK,aAAa,CAACC,EAAS;IAC5B,OAAO,IAAI,CAACT,UAAU,CAACU,MAAM,CAAyB,GAAG,IAAI,CAACL,UAAU,GAAG,EAAC;MAACM,IAAI,EAAC;QAACF;MAAE;IAAC,CAAC,CAAC;EAC1F;EAEOG,aAAa,CAACC,SAAgB,EAACC,MAAc;IAClD,OAAO,IAAI,CAACd,UAAU,CAACe,GAAG,CAAgB,GAAG,IAAI,CAACV,UAAU,qBAAqBQ,SAAS,oBAAoBC,MAAM,CAACE,QAAQ;wBACzGF,MAAM,CAACG,SAAS,uBAAuBH,MAAM,CAACI,WAAW,iBAAiBJ,MAAM,CAACK,KAAK,yBAAyBL,MAAM,CAACM,aAAa,EAAE,CAAC;EAC5J;;AApBWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAuB,SAAdvB,cAAc;EAAAwB,YAFb;AAAM","names":["environment","ContactService","constructor","httpClient","baseUrl","addContact","contact","post","contactUrl","updateContact","put","deleteContact","id","delete","body","searchContact","pageIndex","filter","get","lastName","firstName","companyName","email","contactNumber","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\chris\\source\\repos\\dotNetExamCRUD\\dotNetExamCRUD.Web\\ClientApp\\src\\app\\contact\\shared\\contact.service.ts"],"sourcesContent":["import { CommandResult } from './model/commandResult';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Contact } from './model/contact';\nimport { SearchContact } from './model/search-contact';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  private contactUrl:string = environment.baseUrl;\n  constructor(private httpClient: HttpClient) { }\n\n  public addContact(contact:Contact){\n    return this.httpClient.post<CommandResult<string>>(`${this.contactUrl}/`,{...contact})\n  }\n\n  public updateContact(contact:Contact){\n    return this.httpClient.put<CommandResult<boolean>>(`${this.contactUrl}/`,{...contact})\n  }\n\n  public deleteContact(id:string){\n    return this.httpClient.delete<CommandResult<boolean>>(`${this.contactUrl}/`,{body:{id}})\n  }\n\n  public searchContact(pageIndex:number,filter:Contact){\n    return this.httpClient.get<SearchContact>(`${this.contactUrl}/search?pageIndex=${pageIndex}&filter.lastName=${filter.lastName}\n    &filter.firstName=${filter.firstName}&filter.companyName=${filter.companyName}&filter.email=${filter.email}&filter.contactNumber=${filter.contactNumber}`)\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}