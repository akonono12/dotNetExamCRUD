{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Contact } from '../../model/contact';\nimport { SearchContact } from '../../model/search-contact';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../contact.service\";\nexport class ContactTableComponent {\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.contactFilter = new Contact();\n    this.contacts = [];\n    this.pageIndex = 1;\n    this.totalCount = 0;\n    this.searchList = new SearchContact();\n    this.edit = new EventEmitter();\n  }\n  ngOnInit() {}\n  loadTable() {\n    this.contactService.searchContact(this.pageIndex, this.contactFilter).subscribe(data => {\n      this.contacts = data.results;\n      this.totalCount = data.totalCount;\n      this.pageIndex = data.pageIndex;\n      this.searchList = data;\n    });\n  }\n  handlePageChange(event) {\n    this.pageIndex = event;\n    this.loadTable();\n  }\n  deleteContact(model) {\n    if (confirm(`Are you sure you want to delete: ${model.firstName} ${model.lastName} ?`)) {\n      this.contactService.deleteContact(model.contactId).subscribe(result => {\n        if (result) {\n          alert(\"Succesfully deleted\");\n          this.loadTable();\n        } else {\n          alert(\"Something wrong while deleting.Please contact the administrator.\");\n        }\n      });\n    }\n  }\n  onClickEdit(model) {\n    this.edit.emit(model);\n  }\n  keyPress(event) {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\n      event.preventDefault();\n    }\n  }\n  search() {\n    this.pageIndex = 1;\n    this.loadTable();\n  }\n}\nContactTableComponent.ɵfac = function ContactTableComponent_Factory(t) {\n  return new (t || ContactTableComponent)(i0.ɵɵdirectiveInject(i1.ContactService));\n};\nContactTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactTableComponent,\n  selectors: [[\"app-contact-table\"]],\n  outputs: {\n    edit: \"edit\"\n  },\n  decls: 2,\n  vars: 0,\n  template: function ContactTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" contact-table works!\\n\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAwB,eAAe;AACvE,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,aAAa,QAAQ,4BAA4B;;;AAQ1D,OAAM,MAAOC,qBAAqB;EAQhCC,YAAoBC,cAA6B;IAA7B,mBAAc,GAAdA,cAAc;IAN3B,kBAAa,GAAY,IAAIJ,OAAO,EAAE;IACtC,aAAQ,GAAa,EAAE;IACvB,cAAS,GAAU,CAAC;IACpB,eAAU,GAAU,CAAC;IACrB,eAAU,GAAiB,IAAIC,aAAa,EAAE;IAC3C,SAAI,GAA0B,IAAIF,YAAY,EAAE;EACL;EAErDM,QAAQ,IACR;EAEOC,SAAS;IACd,IAAI,CAACF,cAAc,CAACG,aAAa,CAAC,IAAI,CAACC,SAAS,EAAC,IAAI,CAACC,aAAa,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MACpF,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACE,OAAO;MAC5B,IAAI,CAACC,UAAU,GAAGH,IAAI,CAACG,UAAU;MACjC,IAAI,CAACN,SAAS,GAAGG,IAAI,CAACH,SAAS;MAC/B,IAAI,CAACO,UAAU,GAAGJ,IAAI;IACxB,CAAC,CAAC;EACJ;EAEOK,gBAAgB,CAACC,KAAa;IACnC,IAAI,CAACT,SAAS,GAAGS,KAAK;IACtB,IAAI,CAACX,SAAS,EAAE;EAClB;EAEOY,aAAa,CAACC,KAAa;IAChC,IAAGC,OAAO,CAAC,oCAAoCD,KAAK,CAACE,SAAS,IAAIF,KAAK,CAACG,QAAQ,IAAI,CAAC,EAAC;MACpF,IAAI,CAAClB,cAAc,CAACc,aAAa,CAACC,KAAK,CAACI,SAAS,CAAC,CAACb,SAAS,CAACc,MAAM,IAAG;QACpE,IAAGA,MAAM,EAAC;UACRC,KAAK,CAAC,qBAAqB,CAAC;UAC5B,IAAI,CAACnB,SAAS,EAAE;SACjB,MAAI;UACHmB,KAAK,CAAC,kEAAkE,CAAC;;MAE7E,CAAC,CAAC;;EAEN;EAEOC,WAAW,CAACP,KAAa;IAC9B,IAAI,CAACQ,IAAI,CAACC,IAAI,CAACT,KAAK,CAAC;EACvB;EAEAU,QAAQ,CAACZ,KAAU;IACjB,MAAMa,OAAO,GAAG,aAAa;IAE7B,IAAIC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAChB,KAAK,CAACiB,QAAQ,CAAC;IACnD,IAAIjB,KAAK,CAACkB,OAAO,IAAI,CAAC,IAAI,CAACL,OAAO,CAACM,IAAI,CAACL,SAAS,CAAC,EAAE;MAClDd,KAAK,CAACoB,cAAc,EAAE;;EAE1B;EAEOC,MAAM;IACX,IAAI,CAAC9B,SAAS,GAAG,CAAC;IAClB,IAAI,CAACF,SAAS,EAAE;EAClB;;AAxDWJ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAqC;EAAAC;IAAAb;EAAA;EAAAc;EAAAC;EAAAC;IAAA;MCVlCC,yBAAG;MACDA,uCACF;MAAAA,iBAAI","names":["EventEmitter","Contact","SearchContact","ContactTableComponent","constructor","contactService","ngOnInit","loadTable","searchContact","pageIndex","contactFilter","subscribe","data","contacts","results","totalCount","searchList","handlePageChange","event","deleteContact","model","confirm","firstName","lastName","contactId","result","alert","onClickEdit","edit","emit","keyPress","pattern","inputChar","String","fromCharCode","charCode","keyCode","test","preventDefault","search","selectors","outputs","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\chris\\source\\repos\\dotNetExamCRUD\\dotNetExamCRUD.Web\\ClientApp\\src\\app\\contact\\shared\\components\\contact-table\\contact-table.component.ts","C:\\Users\\chris\\source\\repos\\dotNetExamCRUD\\dotNetExamCRUD.Web\\ClientApp\\src\\app\\contact\\shared\\components\\contact-table\\contact-table.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Contact } from '../../model/contact';\nimport { SearchContact } from '../../model/search-contact';\nimport { ContactService } from '../../contact.service';\n\n@Component({\n  selector: 'app-contact-table',\n  templateUrl: './contact-table.component.html',\n  styleUrls: ['./contact-table.component.css']\n})\nexport class ContactTableComponent implements OnInit {\n\n  public contactFilter: Contact = new Contact();\n  public contacts:Contact[] = [];\n  public pageIndex:number = 1;\n  public totalCount:number = 0;\n  public searchList:SearchContact = new SearchContact();\n  @Output() edit: EventEmitter<Contact> = new EventEmitter();\n  constructor(private contactService:ContactService) { }\n\n  ngOnInit() {\n  }\n\n  public loadTable(){\n    this.contactService.searchContact(this.pageIndex,this.contactFilter).subscribe(data => {\n      this.contacts = data.results;\n      this.totalCount = data.totalCount;\n      this.pageIndex = data.pageIndex;\n      this.searchList = data;\n    })\n  }\n\n  public handlePageChange(event: number): void {\n    this.pageIndex = event;\n    this.loadTable();\n  }\n\n  public deleteContact(model:Contact){\n    if(confirm(`Are you sure you want to delete: ${model.firstName} ${model.lastName} ?`)){\n      this.contactService.deleteContact(model.contactId).subscribe(result => {\n        if(result){\n          alert(\"Succesfully deleted\");\n          this.loadTable();\n        }else{\n          alert(\"Something wrong while deleting.Please contact the administrator.\")\n        }\n      })\n    }\n  }\n\n  public onClickEdit(model:Contact){\n    this.edit.emit(model);\n  }\n\n  keyPress(event: any) {\n    const pattern = /[0-9\\+\\-\\ ]/;\n\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\n      event.preventDefault();\n    }\n  }\n\n  public search(){\n    this.pageIndex = 1;\n    this.loadTable();\n  }\n\n}\n","<p>\n  contact-table works!\n</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}