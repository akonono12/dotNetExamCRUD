{"ast":null,"code":"import { Contact } from './shared/model/contact';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./shared/contact.service\";\nimport * as i2 from \"./shared/components/contact-form/contact-form.component\";\nimport * as i3 from \"./shared/components/contact-table/contact-table.component\";\nconst _c0 = [\"table\"];\nexport class ContactComponent {\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.contact = new Contact();\n    this.tempContact = new Contact();\n    this.GUIDEMPTY = '00000000-0000-0000-0000-000000000000';\n  }\n  ngAfterViewInit() {\n    this.contactTable.loadTable();\n  }\n  ngOnInit() {}\n  mappedModel(model) {\n    this.contact = model;\n  }\n  addContact() {\n    this.contactService.addContact(this.contact).subscribe(data => {\n      if (data.success) {\n        alert(\"Successfully added\");\n        this.contactTable.loadTable();\n      } else {\n        data.errors.forEach(x => {\n          alert(x);\n        });\n      }\n    }, () => alert(\"Something wrong while adding.Please contact the administrator.\"));\n  }\n  updateContact() {\n    this.contactService.updateContact(this.contact).subscribe(data => {\n      if (data.success) {\n        alert(\"Succesfully updated\");\n        this.contactTable.loadTable();\n      } else {\n        this.data.errors.forEach(x => {\n          alert(x);\n        });\n      }\n    }, () => alert(\"Something wrong while updating.Please contact the administrator.\"));\n  }\n  save() {\n    if (this.contact.contactId != this.GUIDEMPTY) {\n      this.tempContact = this.contact;\n      this.updateContact();\n    } else {\n      this.addContact();\n    }\n    this.contact = new Contact();\n    this.tempContact = new Contact();\n  }\n}\nContactComponent.ɵfac = function ContactComponent_Factory(t) {\n  return new (t || ContactComponent)(i0.ɵɵdirectiveInject(i1.ContactService));\n};\nContactComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactComponent,\n  selectors: [[\"app-contact\"]],\n  viewQuery: function ContactComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contactTable = _t.first);\n    }\n  },\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"col-md-12\", \"mb-3\"], [1, \"row\", \"mb-4\"], [1, \"col-md-6\", \"col-lg-6\"], [3, \"contact\"], [1, \"row\"], [1, \"col\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"mb-2\"], [3, \"edit\"], [\"table\", \"\"]],\n  template: function ContactComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \" Contact\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This is a simple CRUD web application.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 0)(5, \"div\", 1)(6, \"div\", 2);\n      i0.ɵɵelement(7, \"app-contact-form\", 3);\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function ContactComponent_Template_button_click_10_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(11, \"Save\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(12, \"hr\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"app-contact-table\", 8, 9);\n      i0.ɵɵlistener(\"edit\", function ContactComponent_Template_app_contact_table_edit_14_listener($event) {\n        return ctx.mappedModel($event);\n      });\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"contact\", ctx.contact);\n    }\n  },\n  dependencies: [i2.ContactFormComponent, i3.ContactTableComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,OAAO,QAAQ,wBAAwB;;;;;;AAOhD,OAAM,MAAOC,gBAAgB;EAM3BC,YAAoBC,cAA6B;IAA7B,mBAAc,GAAdA,cAAc;IAJ3B,YAAO,GAAW,IAAIH,OAAO,EAAE;IAC/B,gBAAW,GAAW,IAAIA,OAAO,EAAE;IACnC,cAAS,GAAU,sCAAsC;EAEX;EACrDI,eAAe;IACb,IAAI,CAACC,YAAY,CAACC,SAAS,EAAE;EAC/B;EAEAC,QAAQ,IAER;EAEOC,WAAW,CAACC,KAAa;IAC9B,IAAI,CAACC,OAAO,GAAGD,KAAK;EACtB;EAEQE,UAAU;IAChB,IAAI,CAACR,cAAc,CAACQ,UAAU,CAAC,IAAI,CAACD,OAAO,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG;MAC5D,IAAGA,IAAI,CAACC,OAAO,EAAC;QACdC,KAAK,CAAC,oBAAoB,CAAC;QAC3B,IAAI,CAACV,YAAY,CAACC,SAAS,EAAE;OAC9B,MAAI;QACHO,IAAI,CAACG,MAAM,CAACC,OAAO,CAACC,CAAC,IAAG;UACtBH,KAAK,CAACG,CAAC,CAAC;QACV,CAAC,CAAC;;IAEN,CAAC,EAAC,MAAMH,KAAK,CAAC,gEAAgE,CAAC,CAAC;EAClF;EAEQI,aAAa;IACnB,IAAI,CAAChB,cAAc,CAACgB,aAAa,CAAC,IAAI,CAACT,OAAO,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG;MAC/D,IAAGA,IAAI,CAACC,OAAO,EAAC;QACdC,KAAK,CAAC,qBAAqB,CAAC;QAC5B,IAAI,CAACV,YAAY,CAACC,SAAS,EAAE;OAC9B,MAAI;QACH,IAAI,CACJO,IAAI,CAACG,MAAM,CAACC,OAAO,CAACC,CAAC,IAAG;UACtBH,KAAK,CAACG,CAAC,CAAC;QACV,CAAC,CAAC;;IAEN,CAAC,EAAC,MAAMH,KAAK,CAAC,kEAAkE,CAAC,CAAC;EACpF;EAEOK,IAAI;IACT,IAAG,IAAI,CAACV,OAAO,CAACW,SAAS,IAAI,IAAI,CAACC,SAAS,EAAC;MAC1C,IAAI,CAACC,WAAW,GAAG,IAAI,CAACb,OAAO;MAC/B,IAAI,CAACS,aAAa,EAAE;KACrB,MAAI;MACH,IAAI,CAACR,UAAU,EAAE;;IAEnB,IAAI,CAACD,OAAO,GAAG,IAAIV,OAAO,EAAE;IAC5B,IAAI,CAACuB,WAAW,GAAE,IAAIvB,OAAO,EAAE;EACjC;;AAvDWC,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAuB;EAAAC;IAAA;;;;;;;;;;;;;MCV7BC,0BAAI;MACFA,0BACF;MAAAA,iBAAK;MAELA,yBAAG;MAAAA,sDAAsC;MAAAA,iBAAI;MAC7CA,8BAA4B;MAGtBA,sCAAyD;MACzDA,8BAAiB;MAEuCA;QAAA,OAASC,UAAM;MAAA,EAAC;MAAED,qBAAI;MAAAA,iBAAS;MAGzFA,yBAAkB;MACjBA,iBAAM;MACNA,+BAAgC;MACLA;QAAA,OAAQC,uBAAmB;MAAA,EAAC;MAACD,iBAAoB;;;MATzDA,eAAmB;MAAnBA,qCAAmB","names":["Contact","ContactComponent","constructor","contactService","ngAfterViewInit","contactTable","loadTable","ngOnInit","mappedModel","model","contact","addContact","subscribe","data","success","alert","errors","forEach","x","updateContact","save","contactId","GUIDEMPTY","tempContact","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\chris\\source\\repos\\dotNetExamCRUD\\dotNetExamCRUD.Web\\ClientApp\\src\\app\\contact\\contact.component.ts","C:\\Users\\chris\\source\\repos\\dotNetExamCRUD\\dotNetExamCRUD.Web\\ClientApp\\src\\app\\contact\\contact.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ContactService } from './shared/contact.service';\nimport { ContactTableComponent } from './shared/components/contact-table/contact-table.component';\nimport { Contact } from './shared/model/contact';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  public contact:Contact = new Contact();\n  public tempContact:Contact = new Contact();\n  public GUIDEMPTY:string = '00000000-0000-0000-0000-000000000000';\n  @ViewChild(\"table\",{static:false}) contactTable!:ContactTableComponent;\n  constructor(private contactService:ContactService) { }\n  ngAfterViewInit(): void {\n    this.contactTable.loadTable();\n  }\n\n  ngOnInit() {\n\n  }\n\n  public mappedModel(model:Contact){\n    this.contact = model;\n  }\n\n  private addContact(){\n    this.contactService.addContact(this.contact).subscribe(data => {\n      if(data.success){\n        alert(\"Successfully added\");\n        this.contactTable.loadTable();\n      }else{\n        data.errors.forEach(x => {\n          alert(x);\n        })\n      }\n    },() => alert(\"Something wrong while adding.Please contact the administrator.\"))\n  }\n\n  private updateContact(){\n    this.contactService.updateContact(this.contact).subscribe(data =>{\n      if(data.success){\n        alert(\"Succesfully updated\");\n        this.contactTable.loadTable();\n      }else{\n        this.\n        data.errors.forEach(x => {\n          alert(x);\n        })\n      }\n    },() => alert(\"Something wrong while updating.Please contact the administrator.\"))\n  }\n\n  public save(){\n    if(this.contact.contactId != this.GUIDEMPTY){\n      this.tempContact = this.contact;\n      this.updateContact();\n    }else{\n      this.addContact();\n    }\n    this.contact = new Contact();\n    this.tempContact =new Contact();\n  }\n}\n","<h1>\n  Contact\n</h1>\n\n<p>This is a simple CRUD web application.</p>\n<div class=\"col-md-12 mb-3\">\n  <div class=\"row mb-4\" >\n    <div class=\"col-md-6 col-lg-6\" >\n      <app-contact-form [contact]=\"contact\"></app-contact-form>\n      <div class=\"row\">\n        <div class=\"col text-center\">\n          <button type=\"submit\" class=\"btn btn-sm btn-primary\"(click)=\"save()\" >Save</button>\n        </div>\n      </div>\n    <hr class=\"mb-2\"/>\n     </div>\n     <div class=\"col-md-6 col-lg-6\" >\n      <app-contact-table #table (edit)=\"mappedModel($event)\"></app-contact-table>\n     </div>\n  </div>\n\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}